services:
  # image php
  hotspot-php:
    container_name: hotspot-php
    build:
      args:
        user: wesllycode
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ../code/:/var/www
      - composer-cache:/tmp/composer-cache
      - node-modules:/var/www/node_modules
      #- ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      hotspot-db:
        condition: service_healthy
      hotspot-redis:
        condition: service_healthy
    networks:
      - hot

  # nginx
  hotspot-nginx:
    container_name: hotspot-nginx
    image: nginx:latest
    restart: unless-stopped
    tty: true
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ../code/:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - hotspot-php
    networks:
      - hot


  # db
  hotspot-db:
    container_name: hotspot-db
    image: mysql:8.0
    platform: linux/amd64
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=128M --sql_mode=""
    restart: unless-stopped
    tty: true
    volumes:
      -  ./hot-data:/var/lib/mysql/
    networks:
      - hot
    ports:
      - '3388:3306'
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "laravel"
      MYSQL_USER: "laravel"
      MYSQL_PASSWORD: "laravel"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot" ]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 20s



  hotspot-phpmyadmin:
    container_name: hotspot-phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    ports:
      - '8181:80'
    networks:
      - hot
    environment:
      PMA_HOST: hotspot-db
      PMA_USER: root
      PMA_PASSWORD: root
    depends_on:
      hotspot-db:
        condition: service_healthy

  # redis
  hotspot-redis:
      container_name: hotspot-redis
      image: redis:latest
      ports:
        - 6379:6379
      command: redis-server --appendonly yes
      volumes:
        - redis-data:/data
      healthcheck:
        test: [ "CMD", "redis-cli", "ping" ]
        retries: 3
        timeout: 5s
      networks:
        - hot

  # Servidor de E-mail
  hotspot-mailhog:
      image: mailhog/mailhog:latest
      container_name: hotspot-mailhog
      ports:
         - "8003:1025"
         - "8100:8025"
      networks:
         - hot

  # queue
  hotspot-queue:
    container_name: hotspot-queue
    build:
      args:
        user: wesllycode
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    command: "php artisan queue:work --verbose --tries=3 --timeout=90"
    volumes:
      - ../code/:/var/www
      - composer-cache:/tmp/composer-cache
    networks:
      - hot
    depends_on:
      hotspot-php:
        condition: service_started
      hotspot-db:
        condition: service_healthy
      hotspot-redis:
        condition: service_healthy


networks:
  hot:
    driver: bridge

volumes:
  code:
    driver: local
  hot-data:
    driver: local
  redis-data:
    driver: local
  composer-cache:
    driver: local
  node-modules:
    driver: local
